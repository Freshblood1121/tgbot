<?php

namespace App\Telegram;

use DefStudio\Telegraph\Facades\Telegraph;
use DefStudio\Telegraph\Handlers\WebhookHandler;
use DefStudio\Telegraph\Keyboard\ReplyButton;
use DefStudio\Telegraph\Keyboard\ReplyKeyboard;
use Illuminate\Support\Stringable;

class Handler extends WebhookHandler
{
    protected function handleUnknownCommand(Stringable $text): void
    {
        if ($text->value() === '/start') {
            $this->reply('–†–∞–¥—ã —Ç–µ–±—è –≤–∏–¥–µ—Ç—å üëã');
            $this->home();
        } else {
            $this->reply('–ù–µ–ø–æ–Ω–∏–º–∞—é...');
        }
    }

    protected function handleChatMessage(Stringable $text): void
    {
        if ($text->value() === '–ß–∞–π ü´ñ') {
            $this->reply('–ó–µ–ª—ë–Ω—ã–π —á–∞–π, —á—ë—Ä–Ω—ã–π —á–∞–π');
        } elseif ($text->value() === '–ö–æ—Ñ–µ ‚òï') {
            $this->reply('–ê—Ä–∞–±–∏–∫–∞, –†–æ–±—É—Å—Ç–∞');

        } elseif ($text->value() === '–î—Ä—É–≥–æ–µ üßâ') {
            $this->reply('–î—Ä—É–≥–æ–µ');
            $this->other();
        } elseif ($text->value() === '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†') {
            $this->home();
        } elseif ($text->value() === '–ö–æ–Ω—Ç–∞–∫—Ç—ã üìû') {
            $this->reply('–¢—É—Ç –í–∞–º –ø–æ–º–æ–≥—É—Ç 24/7:' . "\n" . '@timeiscreate');
        } else {
            $this->reply('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ —É –Ω–∞—Å –Ω–µ—Ç...');
        }
    }

    public function home(): void
    {
        $this->chat->message('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†')
            ->replyKeyboard(ReplyKeyboard::make()->buttons([
                ReplyButton::make('–ß–∞–π ü´ñ'),
                ReplyButton::make('–ö–æ—Ñ–µ ‚òï'),
                ReplyButton::make('–î—Ä—É–≥–æ–µ üßâ'),
                ReplyButton::make('–ö–æ–Ω—Ç–∞–∫—Ç—ã üìû'),
            ])->resize()->chunk(3))->send();
    }

    public function like(): void
    {
        Telegraph::message("–°–ø–∞—Å–∏–±–æ –∑–∞ –ª–∞–π–∫ ‚ù§Ô∏è")->send();
    }

    public function subscribe(): void
    {
        Telegraph::message($this->data->get('sub'))->send();
    }

    public function other(): void
    {
        $this->chat->message('–ó–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –Ω–µ–æ–±—ã—á–Ω—ã–µ –≤–∏–¥—ã –Ω–∞–ø–∏—Ç–∫–æ–≤ –∏ –¥–æ–±–∞–≤–æ–∫, —Ç–∞–∫–∏–µ –∫–∞–∫ "–í–∞—Å–∏–ª—ë–∫" –∏–ª–∏ "–õ–∞–≤–∞–Ω–¥–∞".')
            ->replyKeyboard(ReplyKeyboard::make()->buttons([
                ReplyButton::make('–ö–∞–∫–∞–æ ü•õ'),
                ReplyButton::make('Premium ü•á'),
                ReplyButton::make('–î–æ–±–∞–≤–∫–∏ üåº'),
                ReplyButton::make('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè†'),
            ])->resize()->chunk(3))->send();
    }

    public function help(): void
    {
        $this->reply('–ü–æ–∫–∞ —á—Ç–æ —è —É–º–µ—é —Ç–æ–ª—å–∫–æ –≥–æ–≤–æ—Ä–∏—Ç—å:(');
    }
}
